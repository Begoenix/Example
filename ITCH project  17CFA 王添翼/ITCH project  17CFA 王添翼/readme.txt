#在ITCHMessages中定义了信息类，并对不同的信息提供了相应的解码方式


#ITCHDriver相当于事件集与实际任务间的转换器，其中gear(),AddEngine()等函数对纳斯达克数据包都有普遍的作用


#engine是对于特定任务的函数与类的使用，通过读取数据包的代码向系统输入事件，再经过ITCHDriver的分类后利用相应的ITCHMessages类解码，最后输入结果


#在最后的实际操作中，目前的只对数据包内第一天股票的VWAP进行了计算，而利用MarketEvent的不同返回值（O,S,Q,M,E,C）进行判断可完成对交易日的判断


#由于对多线程工作的不熟悉，在该项目的构建上可能会存在着低效率的问题，尽情谅解。


1.获取信息（以b'\x00'开头，长度为其下一个字节的ascll码数）
2.确定信息类型（gear()函数）并选择对应的解码器（ITCHMessages中的各种类）
3.解码器返回结果，输出器输出（tradeengine(),eventengine()两函数）
4.添加到结果中（VWAP数据集）


